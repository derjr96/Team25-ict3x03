"""
Django settings for djangotaurus project.

Generated by 'django-admin startproject' using Django 3.1.3.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""
import json
from pathlib import Path
from django.contrib.messages import constants as messages
import os

from django.core.exceptions import ImproperlyConfigured

from .configfile.decryptor import Decryptor

# Build paths inside the project like this: BASE_DIR / 'subdir'.

# Uncomment for server, comment for localhost
BASE_DIR = Path(__file__).resolve().parent.parent
FILES_DIR = os.path.abspath("/home/team-25/env")
file_path = os.path.join(FILES_DIR, '.env')


# Get secret keys in encrypted .env file
def get_secret(setting):
    try:
        # Uncomment for server, comment for localhost
        secret_dict = Decryptor.decrypt_file(file_path)

        # Uncomment for localhost, comment for server
        # secret_dict = Decryptor.decrypt_file(BASE_DIR / ".env")

        secret = secret_dict.get(setting, "")
        return secret
    except Exception as e:
        print(e)


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = get_secret('DJ_SECRET_KEY')

# GOOGLE RECAPTCHA KEYS
GOOGL_RECAPTCHA_SECRET_KEY = get_secret('GOOGL_RECAPTCHA_SECRET_KEY')
GOOGL_RECAPTCHA_SITE_KEY = get_secret('GOOGL_RECAPTCHA_SITE_KEY')

# SMTP KEYS
SMTP_PORT = get_secret('SMTP_PORT')
SMTP_SERVER = get_secret('SMTP_SERVER')
SMTP_USERNAME = get_secret('SMTP_USERNAME')
SMTP_PASSWORD = get_secret('SMTP_PASSWORD')
SMTP_EMAIL = get_secret('SMTP_EMAIL')

# System Generic Log secrets
LOGGING_GENERAL_FORMAT = get_secret('LOGGING_GENERAL_FORMAT')
LOGGING_DATETIME_FORMAT = get_secret('LOGGING_DATETIME_FORMAT')
LOGGING_LEVEL_FORMAT = get_secret('LOGGING_LEVEL_FORMAT')

# Uncomment for localhost, comment for server
# LOGGING_FILENAME_LOCALHOST = get_secret('LOGGING_FILENAME_LOCAL')

# Uncomment for server, comment for localhost
LOGGING_FILENAME_SERVER = get_secret('LOGGING_FILENAME_SERVER')

# Secure Cookie + HTTP-Only Cookie + Strict Set Site
# Comment out on localhost (IMPORTANT), uncomment for server
CSRF_COOKIE_SECURE = True
SESSION_COOKIE_HTTPONLY = True
CSRF_COOKIE_SAMESITE = 'None'
SESSION_COOKIE_SAMESITE = 'None'

# SECURITY WARNING: don't run with debug turned on in production!
# DEBUG = True
DEBUG = False

ALLOWED_HOSTS = ['127.0.0.1']

# Application definition

INSTALLED_APPS = [
    'django.contrib.admin',
    'django.contrib.auth',
    'django.contrib.contenttypes',
    'django.contrib.sessions',
    'django.contrib.messages',
    'django.contrib.staticfiles',
    'djangotaurus.apps.TaurusConfig',
    "pwa"
]

MIDDLEWARE = [
    'django.middleware.gzip.GZipMiddleware',
    'django.middleware.security.SecurityMiddleware',
    'django.contrib.sessions.middleware.SessionMiddleware',
    'django.middleware.common.CommonMiddleware',
    'django.middleware.csrf.CsrfViewMiddleware',
    'django.contrib.auth.middleware.AuthenticationMiddleware',
    'django.contrib.messages.middleware.MessageMiddleware',
    'django.middleware.clickjacking.XFrameOptionsMiddleware',
]

ROOT_URLCONF = 'djangotaurus.urls'

TEMPLATES = [
    {
        'BACKEND': 'django.template.backends.django.DjangoTemplates',
        'DIRS': [os.path.join(BASE_DIR, 'templates')],
        'APP_DIRS': True,
        'OPTIONS': {
            'context_processors': [
                'django.template.context_processors.debug',
                'django.template.context_processors.request',
                'django.contrib.auth.context_processors.auth',
                'django.contrib.messages.context_processors.messages',
            ],
        },
    },
]

WSGI_APPLICATION = 'djangotaurus.wsgi.application'

# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': get_secret('DB_NAME'),
        'USER': get_secret('DB_USER'),
        'PASSWORD': get_secret('DB_PASSWORD'),
        'HOST': get_secret('DB_HOST'),
        'PORT': get_secret('DB_PORT'),
        'TEST': {
            'NAME': 'test_taurus',
        },
        'OPTIONS': {
            'ssl': {
                'ca': get_secret('MYSQL_CA'),
                'key': get_secret('MYSQL_CLIENT_KEY'),
                'cert': get_secret('MYSQL_CLIENT_CA'),
                'cipher': get_secret('MYSQL_CIPHER'),
            },
        },
    }
}

DEFAULT_AUTO_FIELD = 'django.db.models.AutoField'

# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        'NAME': 'django.contrib.auth.password_validation.UserAttributeSimilarityValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.MinimumLengthValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.CommonPasswordValidator',
    },
    {
        'NAME': 'django.contrib.auth.password_validation.NumericPasswordValidator',
    },
]

# User substitution
# https://docs.djangoproject.com/en/1.11/topics/auth/customizing/#auth-custom-user

AUTH_USER_MODEL = 'djangotaurus.User'

# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = 'en-us'

TIME_ZONE = 'Asia/Singapore'

USE_I18N = True

USE_L10N = True

USE_TZ = True

# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

# Enable only for Windows Systems
# STATIC_URL = '/static/'
# STATICFILES_DIRS = (
#    os.path.join(BASE_DIR,'assets'),
# )

# Enable only for Linux Systems
STATIC_ROOT = "/home/taurus-static/"

STATIC_URL = '/static/'

STATICFILES_DIRS = (
    ('assets', '/var/jenkins_home/workspace/djangotaurus-pipeline/djangotaurus/assets'),
)

MESSAGE_TAGS = {
    messages.ERROR: 'danger',
}

SESSION_SERIALIZER = 'django.contrib.sessions.serializers.PickleSerializer'

SESSION_COOKIE_AGE = 30 * 60

ALLOWED_REFERERS = [
    'login',
    'changePassword',
    'otp',
    'profile',
    'taurus.sitict.net'
]

# PWA Service Worker Path
PWA_SERVICE_WORKER_PATH = os.path.join(BASE_DIR, 'djangotaurus', 'serviceworker.js')

# PWA Settings
PWA_APP_NAME = 'Diamond Hands'
PWA_APP_DESCRIPTION = "Diamond Hands PWA"
PWA_APP_THEME_COLOR = '#212636'
PWA_APP_BACKGROUND_COLOR = '#7a87de'
PWA_APP_DISPLAY = 'standalone'
PWA_APP_SCOPE = '/'
PWA_APP_ORIENTATION = 'any'
PWA_APP_START_URL = '/'
PWA_APP_STATUS_BAR_COLOR = 'default'
PWA_APP_ICONS = [
    {
        'src': '/static/images/Logo-200.png',
        'sizes': '200x200'
    },
    {
        'src': '/static/images/Logo-192.png',
        'sizes': '192x192'
    },
    {
        'src': '/static/images/Logo-512.png',
        'sizes': '512x512'
    },
    {
        "src": "/static/images/Logo-Maskable-196.png",
        "sizes": "196x196",
        "type": "image/png",
        "purpose": "maskable"
    }
]
PWA_APP_ICONS_APPLE = [
    {
        'src': '/static/images/Logo-180.png',
        'sizes': '180x180'
    }
]
PWA_APP_SPLASH_SCREEN = [
    {
        'src': '/static/images/Logo-200.png',
        'media': '(device-width: 320px) and (device-height: 568px) and (-webkit-device-pixel-ratio: 2)'
    }
]
PWA_APP_DIR = 'ltr'
PWA_APP_LANG = 'en-US'
